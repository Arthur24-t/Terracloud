---
- name: Deploy Docker services
  hosts: all
  become: yes
  tasks:

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Install required packages
      ansible.builtin.apt:
        name:
          - ca-certificates
          - curl
        state: present

    - name: Create directory for Docker keyrings
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Docker GPG key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'

    - name: Add Docker repository to apt sources
      ansible.builtin.shell: |
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo \"$VERSION_CODENAME\") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
      args:
        executable: /bin/bash

    - name: Update apt cache after adding Docker repository
      ansible.builtin.apt:
        update_cache: yes

    - name: Install Docker and related packages
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
        update_cache: true
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - docker-compose
        - docker-buildx-plugin
        - docker-compose-plugin

    - name: Add Docker group
      ansible.builtin.group:
        name: docker
        state: present

    - name: Add user to Docker group
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        groups: docker
        append: true

    - name: Enable and start Docker services
      ansible.builtin.systemd:
        name: "{{ item }}"
        enabled: true
        state: started
      loop:
        - docker.service
        - containerd.service

    - name: Deploy Docker container for postgres service
      ansible.builtin.docker_container:
        name: postgres
        image: postgres:12
        state: started
        env:
          POSTGRES_USER: YmxldQ==
          POSTGRES_PASSWORD: YmxldWJsZXU1NzMzMA==
          POSTGRES_DB: postgresdb
        ports:
          - "5432:5432"
        restart_policy: always
      when: inventory_hostname == 'postgres-vm-terracloud.westus.cloudapp.azure.com'

    - name: Deploy Docker container for redis service
      ansible.builtin.docker_container:
        name: redis
        image: redis:latest
        state: started
        ports:
          - "6379:6379"
        restart_policy: always
      when: inventory_hostname == 'redis-vm-terracloud.westus.cloudapp.azure.com'
      
    - name: Deploy Docker container for poll service
      ansible.builtin.docker_container:
        name: poll
        image: epitechcontent/t-dop-600-poll:k8s
        state: started
        ports:
          - "5000:80"
        env:
          REDIS_HOST: redis-vm-terracloud.westus.cloudapp.azure.com
        restart_policy: always
      when: inventory_hostname == 'poll-vm-terracloud.westus.cloudapp.azure.com'

    - name: Deploy Docker container for result service
      ansible.builtin.docker_container:
        name: result
        image: epitechcontent/t-dop-600-result:k8s
        state: started
        ports:
          - "5001:80"
        env:
          REDIS_HOST: redis-vm-terracloud.westus.cloudapp.azure.com
          POSTGRES_HOST: postgres-vm-terracloud.westus.cloudapp.azure.com
          POSTGRES_PORT: "5432"
          POSTGRES_USER: YmxldQ==
          POSTGRES_PASSWORD: YmxldWJsZXU1NzMzMA==
          POSTGRES_DB: postgresdb
        restart_policy: always
      when: inventory_hostname == 'result-vm-terracloud.westus.cloudapp.azure.com'

    - name: Deploy Docker container for worker service
      ansible.builtin.docker_container:
        name: worker
        image: epitechcontent/t-dop-600-worker:k8s
        state: started
        env:
          REDIS_HOST: redis-vm-terracloud.westus.cloudapp.azure.com
          POSTGRES_HOST: postgres-vm-terracloud.westus.cloudapp.azure.com
          POSTGRES_PORT: "5432"
          POSTGRES_USER: YmxldQ==
          POSTGRES_PASSWORD: YmxldWJsZXU1NzMzMA==
          POSTGRES_DB: postgresdb
        restart_policy: always
      when: inventory_hostname == 'worker-vm-terracloud.westus.cloudapp.azure.com'